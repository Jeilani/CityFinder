[{"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/index.js":"1","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/App.js":"2","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/Login.js":"3","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/Dashboard.js":"4","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/HelpAUser.js":"5","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseArea.js":"6","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/Messages.js":"7"},{"size":198,"mtime":1610231340590,"results":"8","hashOfConfig":"9"},{"size":602,"mtime":1611775479150,"results":"10","hashOfConfig":"9"},{"size":2607,"mtime":1610402984595,"results":"11","hashOfConfig":"9"},{"size":3032,"mtime":1612126895414,"results":"12","hashOfConfig":"9"},{"size":152,"mtime":1610394731791,"results":"13","hashOfConfig":"9"},{"size":2283,"mtime":1611431382157,"results":"14","hashOfConfig":"9"},{"size":129,"mtime":1610394919269,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ndhqtu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/index.js",[],["32","33"],"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/App.js",[],"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/Login.js",[],"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/Dashboard.js",[],"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/HelpAUser.js",[],"/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/BrowseArea.js",["34"],"import React from 'react'\nimport { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport \"../../CSS/BrowseArea.css\"\n\nconst containerStyle = {\n    left: '30vw',\n  width: '70vw',\n  height: '100vh'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction BrowseArea(props) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyC2L0nnfFlL_0yZ95DZ4S2vL_nj0EKjghE\"\n  })\n  const mapRef = React.useRef()\n  const [map, setMap] = React.useState(null)\n\n  const onLoad = React.useCallback(function callback(map) {\n    navigator.geolocation.getCurrentPosition(position=>{\n        mapRef.current = map;\n        const bounds = new window.google.maps.LatLngBounds();\n        map.fitBounds(bounds);\n        map.panTo(\n          {lat: position.coords.latitude,\n            lng: position.coords.longitude}\n          )\n          map.setZoom(14)\n          setMap(map)\n        }, (err)=>{console.log(err)});\n    }, [])\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null)\n  }, [])\n\n  return isLoaded ? (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={10}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      > <div className=\"searchSideBar\">\n          <div className=\"returnButton\"><i  onClick={()=>{props.setWhichDashboardPage(\"Dashboard\"); props.setAreaClickedIn(null); props.setDashboardPopUp(false)}} className=\"fas fa-3x fa-arrow-circle-left\"></i></div>\n          <form>\n              <input className=\"searchInput\" type=\"input\" placeholder=\"Search apartment/city\"></input>\n          </form>\n          <form>\n            <input placeholder = \"location\" type=\"text\">\n\n            </input>\n            <input placeholder =\"apartment\" type=\"text\">\n\n            </input>\n            <input placeholder=\"category\" type=\"dropdown\">\n\n            </input>\n            <textarea>\n              \n            </textarea>\n          </form>\n          <p className=\"clickInformational\"><i className=\"fas fa-info-circle\"></i>Click on an area or an apartment to ask questions to residents</p>\n        </div>\n        { /* Child components, such as markers, info windows, etc. */ }\n        <></>\n      </GoogleMap>\n  ) : <></>\n}\n\nexport default React.memo(BrowseArea)","/Users/Jeilani/Desktop/Software Engineering/CityFinder/client/src/Components/DashboardComponents/Messages.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":22,"column":10,"nodeType":"41","messageId":"42","endLine":22,"endColumn":13},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]